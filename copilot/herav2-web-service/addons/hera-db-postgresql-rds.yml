# Set AWS template version
AWSTemplateFormatVersion: "2010-09-09"
# Set Parameters
Parameters:
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.
  Name:
    Type: String
    Description: The name of the service, job, or workflow being deployed.

Conditions:
  CreateProductionResources: !Equals [ !Select [0, !Split ["-", !Ref Env]], "production" ]

Resources:
  HeraDbDBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: Group of Copilot private subnets for PostgreSQL instance.
      SubnetIds:
        !Split [',', { 'Fn::ImportValue': !Sub '${App}-${Env}-PrivateSubnets' }]

  HeraDbSecurityGroup:
    Metadata:
      'aws:copilot:description': 'A security group for your workload to access the DB instance HeraDb'
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'The Security Group for ${Name} to access DB instance HeraDb.'
      GroupName: !Sub '${App}-${Env}-DatabaseSecurityGroup'
      VpcId:
        Fn::ImportValue:
          !Sub '${App}-${Env}-VpcId'
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-${Name}-PostgreSQL'

  HeraDbDBInstanceSecurityGroup:
    Metadata:
      'aws:copilot:description': 'A security group for PostgreSQL database'
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: The Security Group for the database instance.
      SecurityGroupIngress:
        - ToPort: 5432
          FromPort: 5432
          IpProtocol: tcp
          Description: !Sub 'From the PostgreSQL Security Group of the workload ${Name}.'
          SourceSecurityGroupId: !Ref HeraDbSecurityGroup
      VpcId:
        Fn::ImportValue:
          !Sub '${App}-${Env}-VpcId'

  HeraDbMasterAdminSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "HERA-DB PostgreSQL Secrets for Master Admin"
      GenerateSecretString:
        SecretStringTemplate: '{"username": "postgres", "password": "<autogenerated>"}'
        GenerateStringKey: "password"
        PasswordLength: 24
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: copilot-environment
          Value: !Sub '${Env}'
        - Key: copilot-application
          Value: !Sub '${App}'

  HeraDbRdsInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: "20"
      DBInstanceClass: !If ["CreateProductionResources", "db.t4g.large", "db.t3.micro"]
      DBName: "postgres"
      DBSubnetGroupName: !Ref HeraDbDBSubnetGroup
      Engine: postgres
      EngineVersion: 13.4
      MasterUsername: !Sub "{{resolve:secretsmanager:${HeraDbMasterAdminSecret}::username}}"
      MasterUserPassword: !Sub "{{resolve:secretsmanager:${HeraDbMasterAdminSecret}::password}}"
      StorageType: gp2
      VPCSecurityGroups:
        - !Ref HeraDbDBInstanceSecurityGroup

  HeraDbSecretTargetAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref HeraDbMasterAdminSecret
      TargetId: !Ref HeraDbRdsInstance
      TargetType: AWS::RDS::DBInstance


Outputs:
  HeraDbSecret: # injected as HERA_DB_SECRET environment variable by Copilot.
    Description: "The JSON secret that holds the database username and password. Fields are 'host', 'port', 'dbname', 'username', 'password', 'dbClusterIdentifier' and 'engine'"
    Value: !Ref HeraDbMasterAdminSecret
  HeraDbSecurityGroup:
    Description: "The security group to attach to the workload."
    Value: !Ref HeraDbSecurityGroup
    Export:
      Name: !Sub 'copilot-${App}-${Env}-HeraDbSecurityGroupExport'